/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Curation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class Curation {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("group_id")
  private Long groupId = null;

  @SerializedName("account_id")
  private Long accountId = null;

  @SerializedName("assigned_to")
  private Long assignedTo = null;

  @SerializedName("article_id")
  private Long articleId = null;

  @SerializedName("version")
  private Long version = null;

  @SerializedName("comments_count")
  private Long commentsCount = null;

  /**
   * The status of the review.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    
    APPROVED("approved"),
    
    REJECTED("rejected"),
    
    CLOSED("closed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("created_date")
  private String createdDate = null;

  @SerializedName("modified_date")
  private String modifiedDate = null;

  public Curation id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The review id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The review id")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Curation groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * The group in which the article is present.
   * @return groupId
  **/
  @ApiModelProperty(required = true, value = "The group in which the article is present.")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }

  public Curation accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account of the owner of the article of this review.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account of the owner of the article of this review.")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public Curation assignedTo(Long assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * The ID of the account to which this review is assigned.
   * @return assignedTo
  **/
  @ApiModelProperty(required = true, value = "The ID of the account to which this review is assigned.")
  public Long getAssignedTo() {
    return assignedTo;
  }

  public void setAssignedTo(Long assignedTo) {
    this.assignedTo = assignedTo;
  }

  public Curation articleId(Long articleId) {
    this.articleId = articleId;
    return this;
  }

   /**
   * The ID of the article of this review.
   * @return articleId
  **/
  @ApiModelProperty(required = true, value = "The ID of the article of this review.")
  public Long getArticleId() {
    return articleId;
  }

  public void setArticleId(Long articleId) {
    this.articleId = articleId;
  }

  public Curation version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * The Version number of the article in review.
   * @return version
  **/
  @ApiModelProperty(required = true, value = "The Version number of the article in review.")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public Curation commentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
    return this;
  }

   /**
   * The number of comments in the review.
   * @return commentsCount
  **/
  @ApiModelProperty(required = true, value = "The number of comments in the review.")
  public Long getCommentsCount() {
    return commentsCount;
  }

  public void setCommentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
  }

  public Curation status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the review.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The status of the review.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Curation createdDate(String createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * The creation date of the review.
   * @return createdDate
  **/
  @ApiModelProperty(required = true, value = "The creation date of the review.")
  public String getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(String createdDate) {
    this.createdDate = createdDate;
  }

  public Curation modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * The date the review has been modified.
   * @return modifiedDate
  **/
  @ApiModelProperty(required = true, value = "The date the review has been modified.")
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Curation curation = (Curation) o;
    return Objects.equals(this.id, curation.id) &&
        Objects.equals(this.groupId, curation.groupId) &&
        Objects.equals(this.accountId, curation.accountId) &&
        Objects.equals(this.assignedTo, curation.assignedTo) &&
        Objects.equals(this.articleId, curation.articleId) &&
        Objects.equals(this.version, curation.version) &&
        Objects.equals(this.commentsCount, curation.commentsCount) &&
        Objects.equals(this.status, curation.status) &&
        Objects.equals(this.createdDate, curation.createdDate) &&
        Objects.equals(this.modifiedDate, curation.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupId, accountId, assignedTo, articleId, version, commentsCount, status, createdDate, modifiedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Curation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    commentsCount: ").append(toIndentedString(commentsCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

