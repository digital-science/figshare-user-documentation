/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.UploadFilePart;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * UploadInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class UploadInfo {
  @SerializedName("token")
  private String token = null;

  @SerializedName("md5")
  private String md5 = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Upload status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("PENDING"),
    
    COMPLETED("COMPLETED"),
    
    ABORTED("ABORTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("parts")
  private List<UploadFilePart> parts = null;

  public UploadInfo token(String token) {
    this.token = token;
    return this;
  }

   /**
   * token received after initializing a file upload
   * @return token
  **/
  @ApiModelProperty(example = "693a2802-cd61-430d-b89f-507f0f6d8fd3", value = "token received after initializing a file upload")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public UploadInfo md5(String md5) {
    this.md5 = md5;
    return this;
  }

   /**
   * md5 provided on upload initialization
   * @return md5
  **/
  @ApiModelProperty(example = "3a7f451c068f4e13260034c611378140", value = "md5 provided on upload initialization")
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }

  public UploadInfo size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * size of file in bytes
   * @return size
  **/
  @ApiModelProperty(example = "70", value = "size of file in bytes")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public UploadInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of file on upload server
   * @return name
  **/
  @ApiModelProperty(example = "3000017/test.py", value = "name of file on upload server")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UploadInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Upload status
   * @return status
  **/
  @ApiModelProperty(value = "Upload status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public UploadInfo parts(List<UploadFilePart> parts) {
    this.parts = parts;
    return this;
  }

  public UploadInfo addPartsItem(UploadFilePart partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<UploadFilePart>();
    }
    this.parts.add(partsItem);
    return this;
  }

   /**
   * Uploads parts
   * @return parts
  **/
  @ApiModelProperty(value = "Uploads parts")
  public List<UploadFilePart> getParts() {
    return parts;
  }

  public void setParts(List<UploadFilePart> parts) {
    this.parts = parts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadInfo uploadInfo = (UploadInfo) o;
    return Objects.equals(this.token, uploadInfo.token) &&
        Objects.equals(this.md5, uploadInfo.md5) &&
        Objects.equals(this.size, uploadInfo.size) &&
        Objects.equals(this.name, uploadInfo.name) &&
        Objects.equals(this.status, uploadInfo.status) &&
        Objects.equals(this.parts, uploadInfo.parts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, md5, size, name, status, parts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadInfo {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

