/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InstitutionAccountsSearch
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class InstitutionAccountsSearch {
  @SerializedName("search_for")
  private String searchFor = null;

  @SerializedName("is_active")
  private Long isActive = null;

  @SerializedName("page")
  private Long page = null;

  @SerializedName("page_size")
  private Long pageSize = 10l;

  @SerializedName("limit")
  private Long limit = null;

  @SerializedName("offset")
  private Long offset = null;

  @SerializedName("institution_user_id")
  private String institutionUserId = null;

  @SerializedName("email")
  private String email = null;

  public InstitutionAccountsSearch searchFor(String searchFor) {
    this.searchFor = searchFor;
    return this;
  }

   /**
   * Search term
   * @return searchFor
  **/
  @ApiModelProperty(example = "figshare", value = "Search term")
  public String getSearchFor() {
    return searchFor;
  }

  public void setSearchFor(String searchFor) {
    this.searchFor = searchFor;
  }

  public InstitutionAccountsSearch isActive(Long isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Filter by active status
   * minimum: 0
   * maximum: 1
   * @return isActive
  **/
  @ApiModelProperty(value = "Filter by active status")
  public Long getIsActive() {
    return isActive;
  }

  public void setIsActive(Long isActive) {
    this.isActive = isActive;
  }

  public InstitutionAccountsSearch page(Long page) {
    this.page = page;
    return this;
  }

   /**
   * Page number. Used for pagination with page_size
   * minimum: 1
   * maximum: 5000
   * @return page
  **/
  @ApiModelProperty(example = "1", value = "Page number. Used for pagination with page_size")
  public Long getPage() {
    return page;
  }

  public void setPage(Long page) {
    this.page = page;
  }

  public InstitutionAccountsSearch pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The number of results included on a page. Used for pagination with page
   * minimum: 1
   * maximum: 1000
   * @return pageSize
  **/
  @ApiModelProperty(example = "10", value = "The number of results included on a page. Used for pagination with page")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public InstitutionAccountsSearch limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of results included on a page. Used for pagination with query
   * minimum: 1
   * maximum: 1000
   * @return limit
  **/
  @ApiModelProperty(example = "10", value = "Number of results included on a page. Used for pagination with query")
  public Long getLimit() {
    return limit;
  }

  public void setLimit(Long limit) {
    this.limit = limit;
  }

  public InstitutionAccountsSearch offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   * minimum: 0
   * maximum: 5000
   * @return offset
  **/
  @ApiModelProperty(example = "0", value = "Where to start the listing(the offset of the first result). Used for pagination with limit")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }

  public InstitutionAccountsSearch institutionUserId(String institutionUserId) {
    this.institutionUserId = institutionUserId;
    return this;
  }

   /**
   * filter by institution_user_id
   * @return institutionUserId
  **/
  @ApiModelProperty(example = "alan", value = "filter by institution_user_id")
  public String getInstitutionUserId() {
    return institutionUserId;
  }

  public void setInstitutionUserId(String institutionUserId) {
    this.institutionUserId = institutionUserId;
  }

  public InstitutionAccountsSearch email(String email) {
    this.email = email;
    return this;
  }

   /**
   * filter by email
   * @return email
  **/
  @ApiModelProperty(example = "alan@institution.com", value = "filter by email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstitutionAccountsSearch institutionAccountsSearch = (InstitutionAccountsSearch) o;
    return Objects.equals(this.searchFor, institutionAccountsSearch.searchFor) &&
        Objects.equals(this.isActive, institutionAccountsSearch.isActive) &&
        Objects.equals(this.page, institutionAccountsSearch.page) &&
        Objects.equals(this.pageSize, institutionAccountsSearch.pageSize) &&
        Objects.equals(this.limit, institutionAccountsSearch.limit) &&
        Objects.equals(this.offset, institutionAccountsSearch.offset) &&
        Objects.equals(this.institutionUserId, institutionAccountsSearch.institutionUserId) &&
        Objects.equals(this.email, institutionAccountsSearch.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchFor, isActive, page, pageSize, limit, offset, institutionUserId, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstitutionAccountsSearch {\n");
    
    sb.append("    searchFor: ").append(toIndentedString(searchFor)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    institutionUserId: ").append(toIndentedString(institutionUserId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

