/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GroupEmbargoOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class GroupEmbargoOptions {
  @SerializedName("id")
  private Long id = null;

  /**
   * Embargo permission type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    LOGGED_IN("logged_in"),
    
    IP_RANGE("ip_range"),
    
    ADMINISTRATOR("administrator");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("ip_name")
  private String ipName = null;

  public GroupEmbargoOptions id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Embargo option id
   * @return id
  **/
  @ApiModelProperty(example = "364", required = true, value = "Embargo option id")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public GroupEmbargoOptions type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Embargo permission type
   * @return type
  **/
  @ApiModelProperty(example = "ip_range", required = true, value = "Embargo permission type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public GroupEmbargoOptions ipName(String ipName) {
    this.ipName = ipName;
    return this;
  }

   /**
   * IP range name; value appears if type is ip_range
   * @return ipName
  **/
  @ApiModelProperty(example = "Figshare IP range", required = true, value = "IP range name; value appears if type is ip_range")
  public String getIpName() {
    return ipName;
  }

  public void setIpName(String ipName) {
    this.ipName = ipName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupEmbargoOptions groupEmbargoOptions = (GroupEmbargoOptions) o;
    return Objects.equals(this.id, groupEmbargoOptions.id) &&
        Objects.equals(this.type, groupEmbargoOptions.type) &&
        Objects.equals(this.ipName, groupEmbargoOptions.ipName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, ipName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupEmbargoOptions {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ipName: ").append(toIndentedString(ipName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

