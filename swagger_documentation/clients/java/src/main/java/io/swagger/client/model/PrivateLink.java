/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PrivateLink
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class PrivateLink {
  @SerializedName("id")
  private String id = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("expires_date")
  private String expiresDate = null;

  @SerializedName("html_location")
  private String htmlLocation = null;

  public PrivateLink id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Private link id
   * @return id
  **/
  @ApiModelProperty(example = "0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482", required = true, value = "Private link id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PrivateLink isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * True if private link is active
   * @return isActive
  **/
  @ApiModelProperty(example = "true", required = true, value = "True if private link is active")
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public PrivateLink expiresDate(String expiresDate) {
    this.expiresDate = expiresDate;
    return this;
  }

   /**
   * Date when link will expire
   * @return expiresDate
  **/
  @ApiModelProperty(example = "2015-07-03T00:00:00", required = true, value = "Date when link will expire")
  public String getExpiresDate() {
    return expiresDate;
  }

  public void setExpiresDate(String expiresDate) {
    this.expiresDate = expiresDate;
  }

  public PrivateLink htmlLocation(String htmlLocation) {
    this.htmlLocation = htmlLocation;
    return this;
  }

   /**
   * HTML url for private link
   * @return htmlLocation
  **/
  @ApiModelProperty(example = "https://figshare.com/s/d5ec7a85bcd6dbe9d9b2", required = true, value = "HTML url for private link")
  public String getHtmlLocation() {
    return htmlLocation;
  }

  public void setHtmlLocation(String htmlLocation) {
    this.htmlLocation = htmlLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateLink privateLink = (PrivateLink) o;
    return Objects.equals(this.id, privateLink.id) &&
        Objects.equals(this.isActive, privateLink.isActive) &&
        Objects.equals(this.expiresDate, privateLink.expiresDate) &&
        Objects.equals(this.htmlLocation, privateLink.htmlLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isActive, expiresDate, htmlLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateLink {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    expiresDate: ").append(toIndentedString(expiresDate)).append("\n");
    sb.append("    htmlLocation: ").append(toIndentedString(htmlLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

