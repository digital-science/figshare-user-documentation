/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PrivateAuthorsSearch
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class PrivateAuthorsSearch {
  @SerializedName("search_for")
  private String searchFor = null;

  @SerializedName("page")
  private Long page = null;

  @SerializedName("page_size")
  private Long pageSize = 10l;

  @SerializedName("limit")
  private Long limit = null;

  @SerializedName("offset")
  private Long offset = null;

  /**
   * The field by which to order. Default varies by endpoint/resource.
   */
  @JsonAdapter(OrderEnum.Adapter.class)
  public enum OrderEnum {
    PUBLISHED_DATE("published_date"),
    
    MODIFIED_DATE("modified_date"),
    
    VIEWS("views"),
    
    SHARES("shares"),
    
    DOWNLOADS("downloads"),
    
    CITES("cites");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderEnum fromValue(String text) {
      for (OrderEnum b : OrderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OrderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OrderEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("order")
  private OrderEnum order = OrderEnum.PUBLISHED_DATE;

  /**
   * Direction of ordering
   */
  @JsonAdapter(OrderDirectionEnum.Adapter.class)
  public enum OrderDirectionEnum {
    ASC("asc"),
    
    DESC("desc");

    private String value;

    OrderDirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderDirectionEnum fromValue(String text) {
      for (OrderDirectionEnum b : OrderDirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OrderDirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderDirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderDirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OrderDirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("order_direction")
  private OrderDirectionEnum orderDirection = OrderDirectionEnum.DESC;

  @SerializedName("institution_id")
  private Long institutionId = null;

  @SerializedName("orcid")
  private String orcid = null;

  @SerializedName("group_id")
  private Long groupId = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("is_public")
  private Boolean isPublic = null;

  public PrivateAuthorsSearch searchFor(String searchFor) {
    this.searchFor = searchFor;
    return this;
  }

   /**
   * Search term
   * @return searchFor
  **/
  @ApiModelProperty(example = "figshare", value = "Search term")
  public String getSearchFor() {
    return searchFor;
  }

  public void setSearchFor(String searchFor) {
    this.searchFor = searchFor;
  }

  public PrivateAuthorsSearch page(Long page) {
    this.page = page;
    return this;
  }

   /**
   * Page number. Used for pagination with page_size
   * minimum: 1
   * maximum: 5000
   * @return page
  **/
  @ApiModelProperty(example = "1", value = "Page number. Used for pagination with page_size")
  public Long getPage() {
    return page;
  }

  public void setPage(Long page) {
    this.page = page;
  }

  public PrivateAuthorsSearch pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The number of results included on a page. Used for pagination with page
   * minimum: 1
   * maximum: 1000
   * @return pageSize
  **/
  @ApiModelProperty(example = "10", value = "The number of results included on a page. Used for pagination with page")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public PrivateAuthorsSearch limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of results included on a page. Used for pagination with query
   * minimum: 1
   * maximum: 1000
   * @return limit
  **/
  @ApiModelProperty(example = "10", value = "Number of results included on a page. Used for pagination with query")
  public Long getLimit() {
    return limit;
  }

  public void setLimit(Long limit) {
    this.limit = limit;
  }

  public PrivateAuthorsSearch offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   * minimum: 0
   * maximum: 5000
   * @return offset
  **/
  @ApiModelProperty(example = "0", value = "Where to start the listing(the offset of the first result). Used for pagination with limit")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }

  public PrivateAuthorsSearch order(OrderEnum order) {
    this.order = order;
    return this;
  }

   /**
   * The field by which to order. Default varies by endpoint/resource.
   * @return order
  **/
  @ApiModelProperty(example = "published_date", value = "The field by which to order. Default varies by endpoint/resource.")
  public OrderEnum getOrder() {
    return order;
  }

  public void setOrder(OrderEnum order) {
    this.order = order;
  }

  public PrivateAuthorsSearch orderDirection(OrderDirectionEnum orderDirection) {
    this.orderDirection = orderDirection;
    return this;
  }

   /**
   * Direction of ordering
   * @return orderDirection
  **/
  @ApiModelProperty(example = "desc", value = "Direction of ordering")
  public OrderDirectionEnum getOrderDirection() {
    return orderDirection;
  }

  public void setOrderDirection(OrderDirectionEnum orderDirection) {
    this.orderDirection = orderDirection;
  }

  public PrivateAuthorsSearch institutionId(Long institutionId) {
    this.institutionId = institutionId;
    return this;
  }

   /**
   * Return only authors associated to this institution
   * @return institutionId
  **/
  @ApiModelProperty(example = "1", value = "Return only authors associated to this institution")
  public Long getInstitutionId() {
    return institutionId;
  }

  public void setInstitutionId(Long institutionId) {
    this.institutionId = institutionId;
  }

  public PrivateAuthorsSearch orcid(String orcid) {
    this.orcid = orcid;
    return this;
  }

   /**
   * Orcid of author
   * @return orcid
  **/
  @ApiModelProperty(value = "Orcid of author")
  public String getOrcid() {
    return orcid;
  }

  public void setOrcid(String orcid) {
    this.orcid = orcid;
  }

  public PrivateAuthorsSearch groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Return only authors in this group or subgroups of the group
   * @return groupId
  **/
  @ApiModelProperty(value = "Return only authors in this group or subgroups of the group")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }

  public PrivateAuthorsSearch isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Return only active authors if True
   * @return isActive
  **/
  @ApiModelProperty(value = "Return only active authors if True")
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public PrivateAuthorsSearch isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Return only authors that have published items if True
   * @return isPublic
  **/
  @ApiModelProperty(value = "Return only authors that have published items if True")
  public Boolean getIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrivateAuthorsSearch privateAuthorsSearch = (PrivateAuthorsSearch) o;
    return Objects.equals(this.searchFor, privateAuthorsSearch.searchFor) &&
        Objects.equals(this.page, privateAuthorsSearch.page) &&
        Objects.equals(this.pageSize, privateAuthorsSearch.pageSize) &&
        Objects.equals(this.limit, privateAuthorsSearch.limit) &&
        Objects.equals(this.offset, privateAuthorsSearch.offset) &&
        Objects.equals(this.order, privateAuthorsSearch.order) &&
        Objects.equals(this.orderDirection, privateAuthorsSearch.orderDirection) &&
        Objects.equals(this.institutionId, privateAuthorsSearch.institutionId) &&
        Objects.equals(this.orcid, privateAuthorsSearch.orcid) &&
        Objects.equals(this.groupId, privateAuthorsSearch.groupId) &&
        Objects.equals(this.isActive, privateAuthorsSearch.isActive) &&
        Objects.equals(this.isPublic, privateAuthorsSearch.isPublic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchFor, page, pageSize, limit, offset, order, orderDirection, institutionId, orcid, groupId, isActive, isPublic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrivateAuthorsSearch {\n");
    
    sb.append("    searchFor: ").append(toIndentedString(searchFor)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    orderDirection: ").append(toIndentedString(orderDirection)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    orcid: ").append(toIndentedString(orcid)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

