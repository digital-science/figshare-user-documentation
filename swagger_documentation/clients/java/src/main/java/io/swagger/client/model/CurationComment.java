/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CurationComment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class CurationComment {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("account_id")
  private Long accountId = null;

  /**
   * The ID of the account which generated this comment.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    COMMENT("comment"),
    
    APPROVED("approved"),
    
    REJECTED("rejected"),
    
    CLOSED("closed");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("text")
  private String text = null;

  public CurationComment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the comment.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The ID of the comment.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CurationComment accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account which generated this comment.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account which generated this comment.")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public CurationComment type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The ID of the account which generated this comment.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The ID of the account which generated this comment.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CurationComment text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The value/content of the comment.
   * @return text
  **/
  @ApiModelProperty(required = true, value = "The value/content of the comment.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurationComment curationComment = (CurationComment) o;
    return Objects.equals(this.id, curationComment.id) &&
        Objects.equals(this.accountId, curationComment.accountId) &&
        Objects.equals(this.type, curationComment.type) &&
        Objects.equals(this.text, curationComment.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, type, text);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurationComment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

