/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CommonSearch
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class CommonSearch {
  @SerializedName("search_for")
  private String searchFor = null;

  @SerializedName("page")
  private Long page = null;

  @SerializedName("page_size")
  private Long pageSize = 10l;

  @SerializedName("limit")
  private Long limit = null;

  @SerializedName("offset")
  private Long offset = null;

  /**
   * Direction of ordering
   */
  @JsonAdapter(OrderDirectionEnum.Adapter.class)
  public enum OrderDirectionEnum {
    ASC("asc"),
    
    DESC("desc");

    private String value;

    OrderDirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderDirectionEnum fromValue(String text) {
      for (OrderDirectionEnum b : OrderDirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OrderDirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderDirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderDirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OrderDirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("order_direction")
  private OrderDirectionEnum orderDirection = OrderDirectionEnum.DESC;

  @SerializedName("institution")
  private Integer institution = null;

  @SerializedName("published_since")
  private String publishedSince = null;

  @SerializedName("modified_since")
  private String modifiedSince = null;

  @SerializedName("group")
  private Integer group = null;

  public CommonSearch searchFor(String searchFor) {
    this.searchFor = searchFor;
    return this;
  }

   /**
   * Search term
   * @return searchFor
  **/
  @ApiModelProperty(example = "figshare", value = "Search term")
  public String getSearchFor() {
    return searchFor;
  }

  public void setSearchFor(String searchFor) {
    this.searchFor = searchFor;
  }

  public CommonSearch page(Long page) {
    this.page = page;
    return this;
  }

   /**
   * Page number. Used for pagination with page_size
   * minimum: 1
   * maximum: 5000
   * @return page
  **/
  @ApiModelProperty(example = "1", value = "Page number. Used for pagination with page_size")
  public Long getPage() {
    return page;
  }

  public void setPage(Long page) {
    this.page = page;
  }

  public CommonSearch pageSize(Long pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The number of results included on a page. Used for pagination with page
   * minimum: 1
   * maximum: 1000
   * @return pageSize
  **/
  @ApiModelProperty(example = "10", value = "The number of results included on a page. Used for pagination with page")
  public Long getPageSize() {
    return pageSize;
  }

  public void setPageSize(Long pageSize) {
    this.pageSize = pageSize;
  }

  public CommonSearch limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of results included on a page. Used for pagination with query
   * minimum: 1
   * maximum: 1000
   * @return limit
  **/
  @ApiModelProperty(example = "10", value = "Number of results included on a page. Used for pagination with query")
  public Long getLimit() {
    return limit;
  }

  public void setLimit(Long limit) {
    this.limit = limit;
  }

  public CommonSearch offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   * minimum: 0
   * maximum: 5000
   * @return offset
  **/
  @ApiModelProperty(example = "0", value = "Where to start the listing(the offset of the first result). Used for pagination with limit")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }

  public CommonSearch orderDirection(OrderDirectionEnum orderDirection) {
    this.orderDirection = orderDirection;
    return this;
  }

   /**
   * Direction of ordering
   * @return orderDirection
  **/
  @ApiModelProperty(example = "desc", value = "Direction of ordering")
  public OrderDirectionEnum getOrderDirection() {
    return orderDirection;
  }

  public void setOrderDirection(OrderDirectionEnum orderDirection) {
    this.orderDirection = orderDirection;
  }

  public CommonSearch institution(Integer institution) {
    this.institution = institution;
    return this;
  }

   /**
   * only return collections from this institution
   * @return institution
  **/
  @ApiModelProperty(example = "2000013", value = "only return collections from this institution")
  public Integer getInstitution() {
    return institution;
  }

  public void setInstitution(Integer institution) {
    this.institution = institution;
  }

  public CommonSearch publishedSince(String publishedSince) {
    this.publishedSince = publishedSince;
    return this;
  }

   /**
   * Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   * @return publishedSince
  **/
  @ApiModelProperty(example = "2017-12-22", value = "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD")
  public String getPublishedSince() {
    return publishedSince;
  }

  public void setPublishedSince(String publishedSince) {
    this.publishedSince = publishedSince;
  }

  public CommonSearch modifiedSince(String modifiedSince) {
    this.modifiedSince = modifiedSince;
    return this;
  }

   /**
   * Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   * @return modifiedSince
  **/
  @ApiModelProperty(example = "2017-12-22", value = "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD")
  public String getModifiedSince() {
    return modifiedSince;
  }

  public void setModifiedSince(String modifiedSince) {
    this.modifiedSince = modifiedSince;
  }

  public CommonSearch group(Integer group) {
    this.group = group;
    return this;
  }

   /**
   * only return collections from this group
   * @return group
  **/
  @ApiModelProperty(example = "2000013", value = "only return collections from this group")
  public Integer getGroup() {
    return group;
  }

  public void setGroup(Integer group) {
    this.group = group;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonSearch commonSearch = (CommonSearch) o;
    return Objects.equals(this.searchFor, commonSearch.searchFor) &&
        Objects.equals(this.page, commonSearch.page) &&
        Objects.equals(this.pageSize, commonSearch.pageSize) &&
        Objects.equals(this.limit, commonSearch.limit) &&
        Objects.equals(this.offset, commonSearch.offset) &&
        Objects.equals(this.orderDirection, commonSearch.orderDirection) &&
        Objects.equals(this.institution, commonSearch.institution) &&
        Objects.equals(this.publishedSince, commonSearch.publishedSince) &&
        Objects.equals(this.modifiedSince, commonSearch.modifiedSince) &&
        Objects.equals(this.group, commonSearch.group);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchFor, page, pageSize, limit, offset, orderDirection, institution, publishedSince, modifiedSince, group);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonSearch {\n");
    
    sb.append("    searchFor: ").append(toIndentedString(searchFor)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderDirection: ").append(toIndentedString(orderDirection)).append("\n");
    sb.append("    institution: ").append(toIndentedString(institution)).append("\n");
    sb.append("    publishedSince: ").append(toIndentedString(publishedSince)).append("\n");
    sb.append("    modifiedSince: ").append(toIndentedString(modifiedSince)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

