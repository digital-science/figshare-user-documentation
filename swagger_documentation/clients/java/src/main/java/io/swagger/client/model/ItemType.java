/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ItemType
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class ItemType {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("string_id")
  private String stringId = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("public_description")
  private String publicDescription = null;

  @SerializedName("is_selectable")
  private Boolean isSelectable = null;

  @SerializedName("url_name")
  private String urlName = null;

  public ItemType id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the item type.
   * minimum: 1
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The ID of the item type.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ItemType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the item type
   * @return name
  **/
  @ApiModelProperty(example = "journal contribution", required = true, value = "The name of the item type")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemType stringId(String stringId) {
    this.stringId = stringId;
    return this;
  }

   /**
   * The string identifier of the item type.
   * @return stringId
  **/
  @ApiModelProperty(example = "journal_contribution", required = true, value = "The string identifier of the item type.")
  public String getStringId() {
    return stringId;
  }

  public void setStringId(String stringId) {
    this.stringId = stringId;
  }

  public ItemType icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * The string identifying the icon of the item type.
   * @return icon
  **/
  @ApiModelProperty(example = "paper", required = true, value = "The string identifying the icon of the item type.")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public ItemType publicDescription(String publicDescription) {
    this.publicDescription = publicDescription;
    return this;
  }

   /**
   * The description of the item type.
   * @return publicDescription
  **/
  @ApiModelProperty(example = "This is the description of an item type", required = true, value = "The description of the item type.")
  public String getPublicDescription() {
    return publicDescription;
  }

  public void setPublicDescription(String publicDescription) {
    this.publicDescription = publicDescription;
  }

  public ItemType isSelectable(Boolean isSelectable) {
    this.isSelectable = isSelectable;
    return this;
  }

   /**
   * The selectable status
   * @return isSelectable
  **/
  @ApiModelProperty(example = "true", required = true, value = "The selectable status")
  public Boolean getIsSelectable() {
    return isSelectable;
  }

  public void setIsSelectable(Boolean isSelectable) {
    this.isSelectable = isSelectable;
  }

  public ItemType urlName(String urlName) {
    this.urlName = urlName;
    return this;
  }

   /**
   * The URL name of the item type.
   * @return urlName
  **/
  @ApiModelProperty(example = "journal_contribution", required = true, value = "The URL name of the item type.")
  public String getUrlName() {
    return urlName;
  }

  public void setUrlName(String urlName) {
    this.urlName = urlName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemType itemType = (ItemType) o;
    return Objects.equals(this.id, itemType.id) &&
        Objects.equals(this.name, itemType.name) &&
        Objects.equals(this.stringId, itemType.stringId) &&
        Objects.equals(this.icon, itemType.icon) &&
        Objects.equals(this.publicDescription, itemType.publicDescription) &&
        Objects.equals(this.isSelectable, itemType.isSelectable) &&
        Objects.equals(this.urlName, itemType.urlName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, stringId, icon, publicDescription, isSelectable, urlName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemType {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stringId: ").append(toIndentedString(stringId)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    publicDescription: ").append(toIndentedString(publicDescription)).append("\n");
    sb.append("    isSelectable: ").append(toIndentedString(isSelectable)).append("\n");
    sb.append("    urlName: ").append(toIndentedString(urlName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

