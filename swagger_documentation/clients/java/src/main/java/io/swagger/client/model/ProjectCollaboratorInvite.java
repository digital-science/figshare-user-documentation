/*
 * Figshare API
 * Figshare apiv2. Using Swagger 2.0
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ProjectCollaboratorInvite
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-14T12:44:49.389+03:00")
public class ProjectCollaboratorInvite {
  /**
   * Role of the the collaborator inside the project
   */
  @JsonAdapter(RoleNameEnum.Adapter.class)
  public enum RoleNameEnum {
    VIEWER("viewer"),
    
    COLLABORATOR("collaborator");

    private String value;

    RoleNameEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleNameEnum fromValue(String text) {
      for (RoleNameEnum b : RoleNameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RoleNameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleNameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleNameEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleNameEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("role_name")
  private RoleNameEnum roleName = null;

  @SerializedName("user_id")
  private Long userId = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("comment")
  private String comment = null;

  public ProjectCollaboratorInvite roleName(RoleNameEnum roleName) {
    this.roleName = roleName;
    return this;
  }

   /**
   * Role of the the collaborator inside the project
   * @return roleName
  **/
  @ApiModelProperty(example = "viewer", required = true, value = "Role of the the collaborator inside the project")
  public RoleNameEnum getRoleName() {
    return roleName;
  }

  public void setRoleName(RoleNameEnum roleName) {
    this.roleName = roleName;
  }

  public ProjectCollaboratorInvite userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User id of the collaborator
   * @return userId
  **/
  @ApiModelProperty(example = "100008", value = "User id of the collaborator")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public ProjectCollaboratorInvite email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Collaborator email
   * @return email
  **/
  @ApiModelProperty(example = "user@domain.com", value = "Collaborator email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ProjectCollaboratorInvite comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Text sent when inviting the user to the project
   * @return comment
  **/
  @ApiModelProperty(example = "hey", value = "Text sent when inviting the user to the project")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectCollaboratorInvite projectCollaboratorInvite = (ProjectCollaboratorInvite) o;
    return Objects.equals(this.roleName, projectCollaboratorInvite.roleName) &&
        Objects.equals(this.userId, projectCollaboratorInvite.userId) &&
        Objects.equals(this.email, projectCollaboratorInvite.email) &&
        Objects.equals(this.comment, projectCollaboratorInvite.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roleName, userId, email, comment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectCollaboratorInvite {\n");
    
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

