{
    "/institutions/{institution_string_id}/articles/filter-by": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "institution_articles", 
            "summary": "Public Licenses", 
            "description": "Returns a list of articles belonging to the institution", 
            "parameters": [
                {
                    "name": "institution_string_id", 
                    "in": "path", 
                    "required": true, 
                    "type": "string"
                }, 
                {
                    "name": "resource_id", 
                    "in": "query", 
                    "required": true, 
                    "type": "string"
                }, 
                {
                    "name": "filename", 
                    "in": "query", 
                    "required": true, 
                    "type": "string"
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of articles", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/articles.json#Article"
                        }
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/institution/hrfeed/upload": {
        "post": {
            "tags": [
                "institutions"
            ], 
            "operationId": "institution_hrfeed_upload", 
            "summary": "Private Institution HRfeed Upload", 
            "description": "More info in the <a href=\"#hr_feed\">HR Feed section</a>", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "consumes": [
                "multipart/form-data"
            ], 
            "parameters": [
                {
                    "in": "formData", 
                    "name": "hrfeed", 
                    "type": "file", 
                    "description": "You can find an example in the Hr Feed section"
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK", 
                    "schema": {
                        "$ref": "../models/common.json#ResponseMessage"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_details", 
            "summary": "Private Account Institutions", 
            "description": "Account institution details", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of institutions", 
                    "schema": {
                        "$ref": "../models/institutions.json#Institution"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/articles": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_articles", 
            "summary": "Private Institution Articles", 
            "description": "Get Articles from own institution. User must be administrator of the institution", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "page", 
                    "in": "query", 
                    "description": "Page number. Used for pagination with page_size", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 5000
                }, 
                {
                    "name": "page_size", 
                    "in": "query", 
                    "description": "The number of results included on a page. Used for pagination with page", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000, 
                    "default": 10
                }, 
                {
                    "name": "limit", 
                    "in": "query", 
                    "description": "Number of results included on a page. Used for pagination with query", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000
                }, 
                {
                    "name": "offset", 
                    "in": "query", 
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0, 
                    "maximum": 5000
                }, 
                {
                    "name": "order", 
                    "in": "query", 
                    "description": "The field by which to order. Default varies by endpoint/resource.", 
                    "type": "string", 
                    "enum": [
                        "published_date", 
                        "modified_date", 
                        "views", 
                        "shares", 
                        "downloads", 
                        "cites"
                    ], 
                    "default": "published_date", 
                    "required": false
                }, 
                {
                    "name": "order_direction", 
                    "in": "query", 
                    "type": "string", 
                    "enum": [
                        "asc", 
                        "desc"
                    ], 
                    "default": "desc", 
                    "required": false
                }, 
                {
                    "name": "published_since", 
                    "in": "query", 
                    "description": "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD", 
                    "type": "string", 
                    "required": false
                }, 
                {
                    "name": "modified_since", 
                    "in": "query", 
                    "description": "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD", 
                    "type": "string", 
                    "required": false
                }, 
                {
                    "name": "status", 
                    "in": "query", 
                    "description": "only return collections with this status", 
                    "type": "integer", 
                    "format": "int64", 
                    "required": false
                }, 
                {
                    "name": "resource_doi", 
                    "in": "query", 
                    "description": "only return collections with this resource_doi", 
                    "type": "string", 
                    "required": false
                }, 
                {
                    "name": "item_type", 
                    "in": "query", 
                    "description": "Only return collections with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 4 - Fileset, 5 - Poster, 6 - Paper, 7 - Presentation, 8 - Thesis, 9 - Code, 12 - Preprint, 13 - Book", 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 13, 
                    "required": false
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of articles belonging to the institution", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/articles.json#Article"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/categories": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_categories_list", 
            "summary": "Private Account Categories", 
            "description": "List institution categories (including parent Categories)", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of categories", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/common.json#Category"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/groups": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_groups_list", 
            "summary": "Private Account Institution Groups", 
            "description": "Returns the groups for which the account has administrative privileges (assigned and inherited).", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of Groups", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/institutions.json#Group"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/roles": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_roles_list", 
            "summary": "Private Account Institution Roles", 
            "description": "Returns the roles available for groups and the institution group.", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of Roles", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/institutions.json#Role"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/accounts": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_accounts_list", 
            "summary": "Private Account Institution Accounts", 
            "description": "Returns the accounts for which the account has administrative privileges (assigned and inherited).", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "page", 
                    "in": "query", 
                    "description": "Page number. Used for pagination with page_size", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 5000
                }, 
                {
                    "name": "page_size", 
                    "in": "query", 
                    "description": "The number of results included on a page. Used for pagination with page", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000, 
                    "default": 10
                }, 
                {
                    "name": "limit", 
                    "in": "query", 
                    "description": "Number of results included on a page. Used for pagination with query", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000
                }, 
                {
                    "name": "offset", 
                    "in": "query", 
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0, 
                    "maximum": 5000
                }, 
                {
                    "name": "is_active", 
                    "in": "query", 
                    "description": "Filter by active status", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0, 
                    "maximum": 1
                }, 
                {
                    "name": "institution_user_id", 
                    "in": "query", 
                    "description": "Filter by institution_user_id", 
                    "required": false, 
                    "type": "string"
                }, 
                {
                    "name": "email", 
                    "in": "query", 
                    "description": "Filter by email", 
                    "required": false, 
                    "type": "string"
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of Accounts", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/other.json#ShortAccount"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }, 
        "post": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_accounts_create", 
            "summary": "Create new Institution Account", 
            "description": "Create a new Account by sending account information", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "in": "body", 
                    "name": "Account", 
                    "description": "Account description", 
                    "schema": {
                        "$ref": "../models/institutions.json#AccountCreate"
                    }, 
                    "required": true
                }
            ], 
            "responses": {
                "201": {
                    "description": "Created"
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/accounts/{account_id}": {
        "put": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_accounts_update", 
            "summary": "Update Institution Account", 
            "description": "Update Institution Account", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "account_id", 
                    "in": "path", 
                    "description": "Account identifier the user is associated to", 
                    "required": true, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1
                }, 
                {
                    "in": "body", 
                    "name": "Account", 
                    "description": "Account description", 
                    "schema": {
                        "$ref": "../models/institutions.json#AccountUpdate"
                    }, 
                    "required": true
                }
            ], 
            "responses": {
                "205": {
                    "description": "Reset Content", 
                    "headers": {
                        "Location": {
                            "type": "string", 
                            "format": "link", 
                            "description": "Location of newly created article"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/roles/{account_id}": {
        "parameters": [
            {
                "name": "account_id", 
                "in": "path", 
                "description": "Account identifier the user is associated to", 
                "required": true, 
                "type": "integer", 
                "format": "int64", 
                "minimum": 1
            }
        ], 
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_account_group_roles", 
            "summary": "List Institution Account Group Roles", 
            "description": "List Institution Account Group Roles", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. Account Group Roles", 
                    "schema": {
                        "$ref": "../models/institutions.json#AccountGroupRoles"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }, 
        "post": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_account_group_roles_create", 
            "summary": "Add Institution Account Group Roles", 
            "description": "Add Institution Account Group Roles", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "in": "body", 
                    "name": "Account", 
                    "description": "Account description", 
                    "schema": {
                        "$ref": "../models/institutions.json#AccountGroupRolesCreate"
                    }, 
                    "required": true
                }
            ], 
            "responses": {
                "201": {
                    "description": "Created"
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/roles/{account_id}/{group_id}/{role_id}": {
        "delete": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_account_group_role_delete", 
            "summary": "Delete Institution Account Group Role", 
            "description": "Delete Institution Account Group Role", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "account_id", 
                    "in": "path", 
                    "description": "Account identifier for which to remove the role", 
                    "required": true, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1
                }, 
                {
                    "name": "group_id", 
                    "in": "path", 
                    "description": "Group identifier for which to remove the role", 
                    "required": true, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1
                }, 
                {
                    "name": "role_id", 
                    "in": "path", 
                    "description": "Role identifier", 
                    "required": true, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1
                }
            ], 
            "responses": {
                "204": {
                    "description": "No Content"
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/accounts/search": {
        "post": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_institution_accounts_search", 
            "summary": "Private Account Institution Accounts Search", 
            "description": "Returns the accounts for which the account has administrative privileges (assigned and inherited).", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "in": "body", 
                    "name": "search", 
                    "description": "Search Parameters", 
                    "schema": {
                        "$ref": "../models/institutions.json#InstitutionAccountsSearch"
                    }, 
                    "required": true
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. An array of Accounts", 
                    "schema": {
                        "type": "array", 
                        "items": {
                            "$ref": "../models/other.json#ShortAccount"
                        }
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/users/{account_id}": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "private_account_institution_user", 
            "summary": "Private Account Institution User", 
            "description": "Retrieve institution user information using the account_id", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "account_id", 
                    "in": "path", 
                    "description": "Account identifier the user is associated to", 
                    "required": true, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. User representation", 
                    "schema": {
                        "$ref": "../models/other.json#User"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/reviews": {
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "account_institution_curations", 
            "summary": "Institution Curation Reviews", 
            "description": "Retrieve a list of curation reviews for this institution", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "in": "query", 
                    "name": "group_id", 
                    "description": "Filter by the group ID", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0
                }, 
                {
                    "in": "query", 
                    "name": "article_id", 
                    "description": "Retrieve the reviews for this article", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0
                }, 
                {
                    "in": "query", 
                    "name": "status", 
                    "description": "Filter by the status of the review", 
                    "required": false, 
                    "type": "string", 
                    "enum": [
                        "pending", 
                        "approved", 
                        "rejected", 
                        "closed"
                    ]
                }, 
                {
                    "name": "limit", 
                    "in": "query", 
                    "description": "Number of results included on a page. Used for pagination with query", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000
                }, 
                {
                    "name": "offset", 
                    "in": "query", 
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0, 
                    "maximum": 5000
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. A list of curation reviews.", 
                    "schema": {
                        "type": "array", 
                        "$ref": "../models/institutions.json#Curation"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/review/{curation_id}": {
        "parameters": [
            {
                "in": "path", 
                "name": "curation_id", 
                "description": "ID of the curation", 
                "required": true, 
                "type": "integer", 
                "format": "int64", 
                "minimum": 1
            }
        ], 
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "account_institution_curation", 
            "summary": "Institution Curation Review", 
            "description": "Retrieve a certain curation review by its ID", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. A curation review.", 
                    "schema": {
                        "$ref": "../models/institutions.json#CurationDetail"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }, 
    "/account/institution/review/{curation_id}/comments": {
        "parameters": [
            {
                "in": "path", 
                "name": "curation_id", 
                "description": "ID of the curation", 
                "required": true, 
                "type": "integer", 
                "format": "int64", 
                "minimum": 1
            }
        ], 
        "get": {
            "tags": [
                "institutions"
            ], 
            "operationId": "account_institution_curation_comments", 
            "summary": "Institution Curation Review Comments", 
            "description": "Retrieve a certain curation review's comments.", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "name": "limit", 
                    "in": "query", 
                    "description": "Number of results included on a page. Used for pagination with query", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 1, 
                    "maximum": 1000
                }, 
                {
                    "name": "offset", 
                    "in": "query", 
                    "description": "Where to start the listing(the offset of the first result). Used for pagination with limit", 
                    "required": false, 
                    "type": "integer", 
                    "format": "int64", 
                    "minimum": 0, 
                    "maximum": 5000
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK. A curation review's comments.", 
                    "schema": {
                        "type": "array", 
                        "$ref": "../models/institutions.json#CurationComment"
                    }
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }, 
        "post": {
            "tags": [
                "institutions"
            ], 
            "operationId": "account_institution_curation_comments", 
            "summary": "POST Institution Curation Review Comment", 
            "description": "Add a new comment to the review.", 
            "security": [
                {
                    "OAuth2": [
                        "all"
                    ]
                }
            ], 
            "parameters": [
                {
                    "in": "body", 
                    "name": "CurationComment", 
                    "description": "The content/value of the comment.", 
                    "schema": {
                        "$ref": "../models/institutions.json#CurationCommentCreate"
                    }, 
                    "required": true
                }
            ], 
            "responses": {
                "200": {
                    "description": "OK."
                }, 
                "400": {
                    "description": "Bad Request"
                }, 
                "403": {
                    "description": "Forbidden", 
                    "schema": {
                        "$ref": "../models/common.json#ErrorMessage"
                    }
                }, 
                "404": {
                    "description": "Not Found"
                }, 
                "500": {
                    "description": "Internal Server Error"
                }
            }
        }
    }
}